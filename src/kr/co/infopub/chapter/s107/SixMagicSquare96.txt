01: package kr.co.infopub.chapter.s107;
02: 
03: public class SixMagicSquare extends MagicSquare{
04: 
05: 	public SixMagicSquare(int n) {
06: 		super(n);
07: 	}
08: 	public SixMagicSquare() {
09: 	    this(6);
10: 	}
11: 	private void makeOdd() {
12: 		// Create dependency 생성의존 
13: 		// 6 마방진은 3마방진을 필요로 한다.
14: 		OddMagicSquare odd=new OddMagicSquare(n/2);
15: 		odd.make();    // 3 마방진을 만든다.
16: 		int[][] mm=odd.getMagic();
17: 		for (int i = 0; i < n/2; i++) {
18: 			for (int j = 0; j <n/2 ; j++) {
19: 				magic[i][j]+=mm[i][j];
20: 				magic[i][j+n/2]+=mm[i][j];
21: 				magic[i+n/2][j]+=mm[i][j];
22: 				magic[i+n/2][j+n/2]+=mm[i][j];
23: 			}
24: 		}
25: 	}
26: 	private void makeMulti() {
27: 	   for (int i = 0; i < n; i++) {
28: 		   for (int j = 0; j < n; j++) {
29: 			    magic[i][j] *= (n/2*n/2);
30: 		   }
31: 	   }
32: 	}
33: 	private void makeCD() {
34: 		for (int i = 0; i <n/2; i++) {
35: 			for (int j = 0; j <n/2; j++) {
36: 				if(magic[i][j]==0){
37: 					magic[i+n/2][j]=3;
38: 				}else{
39: 					magic[i+n/2][j]=0;
40: 				}
41: 				
42: 				if(magic[i][j+n/2]==1){
43: 					magic[i+n/2][j+n/2]=2;
44: 				}else{
45: 					magic[i+n/2][j+n/2]=1;
46: 				}
47: 				
48: 			}
49: 		}
50: 		
51: 	}
52: 	private void makeB() {
53: 		for (int i = 0; i <n/2; i++) {
54: 			for (int j = 0; j <n/2; j++) {
55: 				magic[i][j+n/2]=1;
56: 			}
57: 		}
58: 		
59: 		for (int i = 0; i <n/2; i++) {
60: 			for (int j = 0; j <n/2-(n/4-1); j++) {
61: 				magic[i][j+n/2]=2;
62: 			}
63: 		}
64: 		
65: 		
66: 	}
67: 	private void makeA() {
68: 		for (int i = 0; i <n/2 ; i++) {
69: 			for (int j = 0; j <n/4 ; j++) {
70: 				if(i==n/4){
71: 					magic[i][j+1]=3;
72: 				}else{
73: 					magic[i][j]=3;
74: 				}
75: 			}
76: 		}
77: 	}
78: 	public void make(){
79: 		makeA();
80: 		makeB();
81: 		makeCD();
82: 		makeMulti();
83: 		makeOdd();
84: 	}//
85: }
