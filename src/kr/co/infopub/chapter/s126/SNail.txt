01: package kr.co.infopub.chapter.s126;
02: public class SNail {
03: 	private int m;
04: 	private int n;
05: 	private int[][] loc;
06: 	public SNail(int m, int n) {
07: 		super();
08: 		this.m = m;
09: 		this.n = n;
10: 		loc=new int[m][n];
11: 	}
12: 	public void make(){
13: 		int x=0;
14: 		int y=0;
15: 		int d=0;
16: 
17: 		for (int i = 0; i < m; i++) {
18: 			for (int j = 0; j < n; j++) {
19: 				loc[x][y]=i*n+j+1;//넣고
20: 				if(d==0){  // 오른쪽으로 이동
21: 					if(y+1<n && loc[x][y+1]==0){
22: 						y++;
23: 					}else{    // 오른쪽 벽이나 숫자
24: 						d=1;  // 아래
25: 						x++;  // 0,5(y++)=>0,6(x++)->1,6
26: 					}
27: 				} else if(d==1){ //아래로 이동
28: 					if(x+1<n && loc[x+1][y]==0){
29: 						x++;  // 아래로
30: 					}else{    // 아래 벽이나 숫자
31: 						d=2;  // 왼쪽으로
32: 						y--;  // 5,6(x++)=>6,6(y--)->6,5
33: 					}
34: 				}else if(d==2){ // 왼쪽으로
35: 					if(y-1>=0 && loc[x][y-1]==0){
36: 						y--;  // 왼쪽으로
37: 					}else{    // 왼쪽 벽이나 숫자
38: 						d=3;  // 위로
39: 						x--;  // 6,1(y--)=>6,0(x--)->5,0
40: 					}
41: 				}else if(d==3){
42: 					if(x-1>=0 && loc[x-1][y]==0){
43: 						x--;  // 위로 이동
44: 					}else{    // 위쪽벽이나 숫자
45: 						d=0;  // 오른쪽
46: 						y++;  // 2,0(x--)=>1,0(y++)->1,1
47: 					}
48: 				}
49: 			}
50: 		}
51: 	}
52: 	public void print(){
53: 		for (int i = 0; i < m; i++) {
54: 			for (int j = 0; j < n; j++) {
55: 				//System.out.printf("(%2d:[%d,%d])",loc[i][j],i,j);
56: 				System.out.printf("(%2d)",loc[i][j]);
57: 			}
58: 			System.out.println();
59: 		}
60: 	}
61: }
