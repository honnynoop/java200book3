01: package kr.co.infopub.chapter.s118;
02: import java.io.File;
03: import java.util.Date;
04: public class AboutFiles {
05:  public static void printTree(File ff){
06: 	if(ff.exists()){
07: 		File[] fd=ff.listFiles();
08: 		if(fd==null || fd.length==0){
09: 			return ;
10: 		}else{
11: 			for (File f: fd) {
12: 				if(f.isDirectory()){
13: 					System.out.println(f.getAbsolutePath());
14: 				}
15: 			}
16: 		}
17: 	}
18:  }
19:  public static void aboutFile(File f){
20: 	System.out.println("--------------------------------");
21: 	System.out.println(f.getAbsolutePath());
22: 	System.out.println(f.getName());
23: 	System.out.println(RestDay.toStrDate(new Date(f.lastModified())));
24: 	System.out.println("canRead:"+f.canRead());
25: 	System.out.println(f.length()+" bytes.");
26:  }
27:  // 재귀
28:  public static void printTree2(File ff){
29: 	if(ff.exists()){
30: 		File[] fd=ff.listFiles();
31: 		if(fd==null || fd.length==0){
32: 			return ;
33: 		}else{
34: 			for (File f: fd) {
35: 				if(f.isDirectory()){
36: 					System.out.println("---------"+f.getAbsolutePath());
37: 					printTree2(f);
38: 				}else{
39: 					aboutFile(f);
40: 				}
41: 			}
42: 		}
43: 	}
44:  }
45:  public static void main(String[] args) {
46: 	File[] fs=File.listRoots();
47: 	for (File f: fs) {
48: 		if(f.isDirectory()){
49: 			printTree(new File(f.getAbsolutePath()));
50: 		}
51: 	}
52: 	File f=new File("D:\\java");  
53: 	printTree2(f);
54: 	System.out.println("--------------------------------------------");
55: 	for (char c = 'A'; c <= 'Z'; c++) { 
56: 	   String dirNames = c + ":/";       // +System.lineSeparator(); 
57: 	   File allDirs = new File(dirNames); 
58: 	     if(allDirs.exists()){ 
59: 	          long total=(long)allDirs.getTotalSpace(); 
60: 	          long free=(long)allDirs.getFreeSpace(); 
61: 	          Double used=(Double)(1-free*1.0/total)*100; 
62: 	          String str=c+":\\디렉토리의  사용량 :  "+used.intValue()+"%"; 
63: 	          System.out.println(str);
64: 	     } 
65: 	 } 
66:  }
67: }
