01: package kr.co.infopub.chapter.s105;
02: public class SixMagicSquare extends MagicSquare{
03: 
04: 	public SixMagicSquare(int n) {
05: 		super(n);
06: 	}
07: 	public SixMagicSquare() {
08: 	    this(6);
09: 	}
10: 	public void make(){
11: 		makeA();
12: 		makeB();
13: 		makeCD();
14: 		makeMulti();
15: 		makeOdd();
16: 	}//
17: 	private void makeOdd() {
18: 		// Create dependency 생성의존 
19: 		// 6 마방진은 3마방진을 필요로 한다.
20: 		OddMagicSquare odd=new OddMagicSquare(n/2);
21: 		odd.make();    // 3 마방진을 만든다.
22: 		int[][] mm=odd.getMagic();
23: 		for (int i = 0; i < n/2; i++) {
24: 			for (int j = 0; j <n/2 ; j++) {
25: 				magic[i][j]+=mm[i][j];
26: 				magic[i][j+n/2]+=mm[i][j];
27: 				magic[i+n/2][j]+=mm[i][j];
28: 				magic[i+n/2][j+n/2]+=mm[i][j];
29: 			}
30: 		}
31: 	}
32: 	private void makeMulti() {
33: 	   for (int i = 0; i < n; i++) {
34: 		   for (int j = 0; j < n; j++) {
35: 			    magic[i][j] *= (n/2*n/2);
36: 		   }
37: 	   }
38: 	}
39: 	private void makeCD() {
40: 		for (int i = 0; i <n/2; i++) {
41: 			for (int j = 0; j <n/2; j++) {
42: 				if(magic[i][j]==0){
43: 					magic[i+n/2][j]=3;
44: 				}else{
45: 					magic[i+n/2][j]=0;
46: 				}
47: 				
48: 				if(magic[i][j+n/2]==1){
49: 					magic[i+n/2][j+n/2]=2;
50: 				}else{
51: 					magic[i+n/2][j+n/2]=1;
52: 				}
53: 				
54: 			}
55: 		}
56: 		
57: 	}
58: 	private void makeB() {
59: 		for (int i = 0; i <n/2; i++) {
60: 			for (int j = 0; j <n/2; j++) {
61: 				magic[i][j+n/2]=1;
62: 			}
63: 		}
64: 		
65: 		for (int i = 0; i <n/2; i++) {
66: 			for (int j = 0; j <n/2-(n/4-1); j++) {
67: 				magic[i][j+n/2]=2;
68: 			}
69: 		}
70: 		
71: 		
72: 	}
73: 	private void makeA() {
74: 		for (int i = 0; i <n/2 ; i++) {
75: 			for (int j = 0; j <n/4 ; j++) {
76: 				if(i==n/4){
77: 					magic[i][j+1]=3;
78: 				}else{
79: 					magic[i][j]=3;
80: 				}
81: 			}
82: 		}
83: 	}
84: }
