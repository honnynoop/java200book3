001: package kr.co.infopub.chapter.s114;
002: public class Java200Math {
003:  // 축약 s35
004:  public static int sumEach(int n){
005: 	int tot=0;
006: 	while(n!=0){
007: 		tot+=n%10; // 3 -> 2-> 1
008: 		n/=10;     // 123-> 12-> 1->0
009: 	}
010: 	return tot;
011:  }
012:  // s36
013:  public static boolean isPrime(int n){
014: 	boolean isS=true;
015: 	for (int i = 2; i <=(int)Math.sqrt(n); i++) {
016: 		if(n%i==0){
017: 			isS=false;
018: 			break;
019: 		}
020: 	}
021: 	return isS;
022:  }
023:  public static int sumSmith(int n){
024: 	int tot=0;
025: 	int a=2;
026: 	while(n!=1){
027: 		if(n%a==0){
028: 			tot+=sumEach(a);
029: 			n/=a;
030: 		}else{
031: 			a++;
032: 		}
033: 	}
034: 	return tot;
035:  }
036: 	//recursion 재귀
037: 	public static int gcd(int m, int n){
038: 		if(m==1 || n==1 ){
039: 			return 1;
040: 		}else if( m==n){
041: 			return m;
042: 		}else if(m>n){
043: 			return gcd(m-n,n);
044: 		}else{
045: 			return gcd(m,n-m);
046: 		}
047: 	}
048: 
049: 	public static void printPrime(){
050: 		for (int i = 10000; i < 20000; i++) {
051: 			if(isPrime(i)){
052: 				System.out.println(i);
053: 			}
054: 		}
055: 	}
056: 	public static void printDivide(int n){
057: 		if(n==1){
058: 			System.out.println("[1]");
059: 		}else{
060: 			System.out.printf("[1,");
061: 			for (int i = 2; i <n; i++) {
062: 				if(n%i==0){
063: 					System.out.printf("%d,",i);
064: 				}
065: 			}
066: 			System.out.println(n+"]");
067: 		}
068: 	}
069: 	public static void printSmith(int t1, int t2){
070: 		for (int i = t1; i < t2; i++) {
071: 			if(!isPrime(i) && sumEach(i)==sumSmith(i)){//스미스
072: 				System.out.printf("%d는 스미스 수: ",i);
073: 				printPrimeDivide(i);
074: 			}
075: 		}
076: 	}
077: 	
078: 	public static void printPrimeDivide(int n){
079: 		int a=2;
080: 		while(n!=1){
081: 			if(n%a==0){
082: 				if(n/a==1){
083: 					System.out.println(a);
084: 				}else{
085: 					System.out.print(a+"x");
086: 				}
087: 				n/=a;
088: 			}else{
089: 				a++;
090: 			}
091: 		}
092: 	}
093:     //자신을 제외한 약수의 합 divide(6)=1+2+3
094: 	public static int divide(int num){
095: 		int tot=1;
096: 		for(int i=2; i<num ; i++){
097: 			if(num%i==0){
098: 				tot+=i;
099: 			}
100: 		}
101: 		return tot;
102: 	}
103: 	public static void printPerfect(int t1, int t2){
104: 		for (int i = t1; i < t2; i++) {
105: 			if(i==divide(i)){//완전수
106: 				System.out.printf("%d는 완전 수: ",i);
107: 				printDivide(i);
108: 			}
109: 		}
110: 	}
111: 	public static void printAmicable(int t1, int t2){
112: 		for (int i = t1; i < t2; i++) {
113: 			int a=i;
114: 			int b=divide(a);
115: 			int c=divide(b);
116: 			//System.out.println(i);
117: 			if(a<b && a==c){//같은 수 반복 금지
118: 				System.out.printf("(%d,%d)는 친화 수: ",a,b);
119: 				printDivide(a);
120: 				printDivide(b);
121: 			}
122: 		}
123: 	}
124: 	public static void printSociable5(int t1, int t2){
125: 		for (int i = t1; i < t2; i++) {
126: 			int a=i;
127: 			int b=divide(a);
128: 			int c=divide(b);
129: 			int d=divide(c);
130: 			int e=divide(d);
131: 			int f=divide(e);
132: 			if(a<b && a<e && a!=c && b!=d && a==f){
133: 				System.out.printf("(%d,%d, %d,%d, %d)는 Sociable수\n",a,b,c,d,e);
134: 				System.out.println(b);
135: 				System.out.println(c);
136: 				System.out.println(d);
137: 				System.out.println(e);
138: 				System.out.println(f);
139: 				//printDivide(a);
140: 				//printDivide(b);
141: 			}
142: 		}
143: 	}
144: }
